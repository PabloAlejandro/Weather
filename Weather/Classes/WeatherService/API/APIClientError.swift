//
//  APIClientError.swift
//  Weather
//
//  Created by Pau on 26/10/2016.
//  Copyright Â© 2016 Pau. All rights reserved.
//

import UIKit

/**
 The error generated from the api layer.
 
 - GenericError:     The operation failed, the reason is unknown.
 - InternalError:    The operation failed due to an internal error on the http layer. Information about this error can be found in the associated NSError object generated by the internal http layer.
 - ApplicationError: The operation failed due to an application error. The reason can be found in the associated Info object, which also include the server generated error message.
 */
enum APIClientError: Error {
    case GenericError
    case InternalError(NSError)
    case ApplicationError(info: Info)
    
    struct Info: JSONDeserializable {
        let message: String
        let code: Int
        let identifier: String?
        
        init?(dict: JSONDictionary) {
            guard let message = dict["message"] as? String, let code = dict["code"] as? Int else {
                return nil
            }
            self.message = message
            self.code = code
            self.identifier = dict["id"] as? String
        }
    }
}

func defaultAPIClientErrorHandler() -> ((HTTPRequestError) -> APIClientError) {
    return { error in
        switch error {
        case .NoSuccessStatusCode(_, let data, _):
            // parse json response and extract error message
            guard let parsed = decodeJSON(data: data) else {
                break;
            }
            // create error from response
            guard let info = APIClientError.Info(dict: parsed) else {
                break;
            }
            return .ApplicationError(info: info)
        case .Other(let error):
            // use embedded error
            return .InternalError(error)
        default:
            break;
        }
        // generic error
        return .GenericError
        }
}
